------------------------------
prerequisites
------------------------------

1. Erlang R12 or newer
2. Mochiweb from http://code.google.com/p/mochiweb/
3. Log4erl from http://github.com/ahmednawras/log4erl/

------------------------------
running probix server
------------------------------

1. download the source code from github:

	$ git clone git@github.com:esobchenko/probix.git

2. compile the source code:

	$ cd probix
	$ erl -make

3. run the tests:

	$ ./bin/run_tests.sh

4. if the tests were successful, start the server:

	$ ./bin/start_server.sh

5. point your browser to http://localhost:8000

By default, the server binds to 0.0.0.0 and uses port 8000, but you can change
these values by setting PROBIX_SERVER_IP and PROBIX_SERVER_PORT environment variables.

------------------------------
server API reference
------------------------------

1. Creating data series

1.1. Create a new series with pre-existing probes

	$ curl -i -X POST http://localhost:8000/series \
		-d '[{"timestamp": 1254136036, "value:" 123}, {"timestamp": 1254136037, "value:" 130}]'
	HTTP/1.1 200 OK
	Location: http://localhost:8000/series/B40A1F64

	$ curl -i -X POST http://localhost:8000/series \
		-d '{"timestamp": 1254136036, "value:" 123}'
	HTTP/1.1 200 OK
	Location: http://localhost:8000/series/B40A1F64

1.2. Create a new series for later updating

	$ curl -i -X POST http://localhost:8000/series
	HTTP/1.1 200 OK
	Location: http://localhost:8000/series/B40A1F64

2. Adding new data to existing series

2.1. Add a few probes at once

	$ curl -i -X POST http://localhost:8000/series/B40A1F64 \
		-d '[{"timestamp": 1254136036, "value:" 123}, {"timestamp": 1254136037, "value:" 130}]'

2.2. Add a single probe in a series

	$ curl -i -X POST http://localhost:8000/series/B40A1F64 \
		-d '{"timestamp": 1254136036, "value:" 123}'

3. Retrieving data from the series

3.1. Get all existing series

	$ curl -i -X GET http://localhost:8000/series
	HTTP/1.1 200 OK
	[{"uri": "http://localhost:8000/series/B40A1F64", "created": 1254136036}]

3.2. Get a list of probes in this series

	$ curl -i -X GET http://localhost:8000/series/B40A1F64
	HTTP/1.1 200 OK
	[{"timestamp": 1254136036, "value:" 123}, {"timestamp": 1254136037, "value:" 130}]

3.3. Get a slice of probes for this series

	$ curl -i -X GET http://localhost:8000/series/B40A1F64?from=1254136036
	HTTP/1.1 200 OK
	[{"timestamp": 1254136036, "value:" 123}, {"timestamp": 1254136037, "value:" 130}]

	$ curl -i -X GET http://localhost:8000/series/B40A1F64?to=1254136036
	HTTP/1.1 200 OK
	[{"timestamp": 1254136036, "value:" 123}]

	$ curl -i -X GET http://localhost:8000/series/B40A1F64?from=1254136037&to=1254136040
	HTTP/1.1 200 OK
	[{"timestamp": 1254136037, "value:" 130}]

4. Removing data from series

4.1. Delete a data series and all its contents

	$ curl -i -X DELETE http://localhost:8000/series/B40A1F64

4.2. Partial removal of data

	$ curl -i -X DELETE \
		http://localhost:8000/series/B40A1F64?from=1254136036

	$ curl -i -X DELETE \
		http://localhost:8000/series/B40A1F64?to=1254136037

	$ curl -i -X DELETE \
		http://localhost:8000/series/B40A1F64?from=1254136036&to=1254136038

--------------------------------
server API codes
--------------------------------

The API attempts to return appropriate HTTP status codes for every request.
Here's what's going on with our various status codes:

* 200 OK

	Everything went awesome.

* 400 Bad Request

	Your request is invalid, and we'll return an error message that tells you why.

* 401 Not Authorized

	Either you need to provide authentication credentials, or the credentials provided aren't valid.

* 403 Forbidden

	We understand your request, but are refusing to fulfill it. An accompanying error message should explain why.

* 404 Not Found

	Either you're requesting an invalid URI or the resource in question doesn't exist (ex: no such series).

* 500 Internal Server Error

	We did something wrong.

